{"version":3,"file":"static/js/472.f35afe9a.chunk.js","mappings":"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","sources":["pages/dashboard/Contact.js","../node_modules/phosphor-react/src/icons/VideoCamera.tsx"],"sourcesContent":["import React from 'react';\nimport { useTheme} from \"@mui/material/styles\";\nimport { useSearchParams } from 'react-router-dom';\nimport { Avatar, Box, Button, Divider, IconButton, Stack, Typography } from '@mui/material';\nimport { faker } from '@faker-js/faker';\nimport { Bell, CaretRight, Phone, Prohibit, Star, Trash, VideoCamera, X } from 'phosphor-react';\nimport useResponsive from '../../hooks/useResponsive';\nimport AntSwitch from '../../components/AntSwitch';\n\nconst Contact = () => {\n\n    const theme = useTheme();\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    const isDesktop = useResponsive(\"up\", \"md\");\n\n    return (\n        <Box sx={{ width: !isDesktop ? \"100vw\" : 320, maxHeight: \"100vh\" }}>\n        <Stack sx={{ height: \"100%\" }}>\n          <Box\n            sx={{\n              boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\n              width: \"100%\",\n              backgroundColor:\n                theme.palette.mode === \"light\"\n                  ? \"#F8FAFF\"\n                  : theme.palette.background,\n            }}\n          >\n            <Stack\n              sx={{ height: \"100%\", p: 2 }}\n              direction=\"row\"\n              alignItems={\"center\"}\n              justifyContent=\"space-between\"\n              spacing={3}\n            >\n              <Typography variant=\"subtitle2\">Contact Info</Typography>\n              <IconButton\n                onClick={() => {\n                  searchParams.set(\"open\", false);\n                  setSearchParams(searchParams);\n                }}\n              >\n                <X />\n              </IconButton>\n            </Stack>\n          </Box>\n          <Stack\n            sx={{\n              height: \"100%\",\n              position: \"relative\",\n              flexGrow: 1,\n              overflow: \"scroll\",\n            }}\n            p={3}\n            spacing={3}\n          >\n            <Stack alignItems=\"center\" direction=\"row\" spacing={2}>\n              <Avatar\n                src={faker.image.avatar()}\n                alt={faker.name.firstName()}\n                sx={{ height: 64, width: 64 }}\n              />\n              <Stack spacing={0.5}>\n                <Typography variant=\"article\" fontWeight={600}>\n                  {faker.name.fullName()}\n                </Typography>\n                <Typography variant=\"body2\" fontWeight={500}>\n                  {\"+91 62543 28 739\"}\n                </Typography>\n              </Stack>\n            </Stack>\n            <Stack\n              direction=\"row\"\n              alignItems=\"center\"\n              justifyContent={\"space-evenly\"}\n            >\n              <Stack alignItems={\"center\"} spacing={1}>\n                <IconButton>\n                  <Phone />\n                </IconButton>\n\n                <Typography variant=\"overline\">Voice</Typography>\n              </Stack>\n              <Stack alignItems={\"center\"} spacing={1}>\n                <IconButton>\n                  <VideoCamera />\n                </IconButton>\n\n                <Typography variant=\"overline\">Video</Typography>\n              </Stack>\n            </Stack>\n            <Divider />\n            <Stack spacing={0.5}>\n              <Typography variant=\"article\" fontWeight={600}>\n                About\n              </Typography>\n              <Typography variant=\"body2\" fontWeight={500}>\n                {\"Imagination is the only limit\"}\n              </Typography>\n            </Stack>\n            <Divider />\n            <Stack\n              direction=\"row\"\n              alignItems=\"center\"\n              justifyContent={\"space-between\"}\n            >\n              <Typography variant=\"subtitle2\">\n                Media, Links & Docs\n              </Typography>\n              <Button endIcon={<CaretRight />}>401</Button>\n            </Stack>\n            <Stack direction={\"row\"} alignItems=\"center\" spacing={2}>\n              {[1, 2, 3].map((el) => (\n                <Box>\n                  <img\n                    src={faker.image.city()}\n                    alt={faker.internet.userName()}\n                  />\n                </Box>\n              ))}\n            </Stack>\n            <Divider />\n            <Stack\n              direction=\"row\"\n              alignItems=\"center\"\n              justifyContent={\"space-between\"}\n            >\n              <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                <Star size={21} />\n                <Typography variant=\"subtitle2\">\n                  Starred Messages\n                </Typography>\n              </Stack>\n\n              <IconButton>\n                <CaretRight />\n              </IconButton>\n            </Stack>\n            <Divider />\n            <Stack\n              direction=\"row\"\n              alignItems=\"center\"\n              justifyContent={\"space-between\"}\n            >\n              <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                <Bell size={21} />\n                <Typography variant=\"subtitle2\">\n                  Mute Notifications\n                </Typography>\n              </Stack>\n\n              <AntSwitch />\n            </Stack>\n            <Divider />\n            <Typography variant=\"body2\">1 group in common</Typography>\n            <Stack direction=\"row\" alignItems={\"center\"} spacing={2}>\n              <Avatar\n                src={faker.image.imageUrl()}\n                alt={faker.name.fullName()}\n              />\n              <Stack direction=\"column\" spacing={0.5}>\n                <Typography variant=\"subtitle2\">Camel’s Gang</Typography>\n                <Typography variant=\"caption\">\n                  Owl, Parrot, Rabbit , You\n                </Typography>\n              </Stack>\n            </Stack>\n            <Divider />\n            <Stack direction=\"row\" alignItems={\"center\"} spacing={2}>\n              <Button fullWidth startIcon={<Prohibit />} variant=\"outlined\">\n                Block\n              </Button>\n              <Button fullWidth startIcon={<Trash />} variant=\"outlined\">\n                Delete\n              </Button>\n            </Stack>\n          </Stack>\n        </Stack>\n      </Box>\n    )\n}\n\nexport default Contact;","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <path\n      d=\"M24,60H152a32,32,0,0,1,32,32v96a8,8,0,0,1-8,8H48a32,32,0,0,1-32-32V68A8,8,0,0,1,24,60Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n    <polyline\n      points=\"184 112 240 80 240 176 184 144\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <path\n      d=\"M24,60H152a32,32,0,0,1,32,32v96a8,8,0,0,1-8,8H48a32,32,0,0,1-32-32V68A8,8,0,0,1,24,60Z\"\n      opacity=\"0.2\"\n    />\n    <path\n      d=\"M24,60H152a32,32,0,0,1,32,32v96a8,8,0,0,1-8,8H48a32,32,0,0,1-32-32V68A8,8,0,0,1,24,60Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"184 112 240 80 240 176 184 144\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M176,92v96a16,16,0,0,1-16,16H48A40,40,0,0,1,8,164V68A16,16,0,0,1,24,52H136A40,40,0,0,1,176,92Zm68-18.9a7.7,7.7,0,0,0-8,0L196,95.9a8,8,0,0,0-4,7v50.2a8,8,0,0,0,4,7l40,22.8a8.3,8.3,0,0,0,4,1.1,8,8,0,0,0,4-1.1,7.8,7.8,0,0,0,4-6.9V80A7.8,7.8,0,0,0,244,73.1Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <path\n      d=\"M24,60H152a32,32,0,0,1,32,32v96a8,8,0,0,1-8,8H48a32,32,0,0,1-32-32V68A8,8,0,0,1,24,60Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n    <polyline\n      points=\"184 112 240 80 240 176 184 144\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <path\n      d=\"M24,60H152a32,32,0,0,1,32,32v96a8,8,0,0,1-8,8H48a32,32,0,0,1-32-32V68A8,8,0,0,1,24,60Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n    <polyline\n      points=\"184 112 240 80 240 176 184 144\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <path\n      d=\"M24,60H152a32,32,0,0,1,32,32v96a8,8,0,0,1-8,8H48a32,32,0,0,1-32-32V68A8,8,0,0,1,24,60Z\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n    <polyline\n      points=\"184 112 240 80 240 176 184 144\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst VideoCamera = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nVideoCamera.displayName = \"VideoCamera\";\n\nexport default VideoCamera;\n"],"names":["theme","useTheme","useSearchParams","searchParams","setSearchParams","isDesktop","useResponsive","sx","width","maxHeight","height","boxShadow","backgroundColor","palette","mode","background","p","direction","alignItems","justifyContent","spacing","variant","onClick","set","position","flexGrow","overflow","src","faker","alt","fontWeight","endIcon","map","el","size","fullWidth","startIcon","pathsByWeight","Map","color","React","d","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","points","opacity","renderPath","weight","renderPathForWeight","VideoCamera","forwardRef","props","ref","IconBase","displayName"],"sourceRoot":""}